<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="htmlEditor1.HtmlFormatterOptions" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAH1HdXJ1Q29tcG9uZW50cy5OZXRyaXguUGx1Z0lucy5IdG1sRm9y
        bWF0dGVyLnY0MC5EZW1vLCBWZXJzaW9uPTIuMC4yMDEwLjEzODcsIEN1bHR1cmU9bmV1dHJhbCwgUHVi
        bGljS2V5VG9rZW49YjVjZTFjZTNmYTQ5YTJjNAwDAAAAeUd1cnVDb21wb25lbnRzLk5ldHJpeC5Qcm9m
        ZXNzaW9uYWwuQ29yZS52NDAuRGVtbywgVmVyc2lvbj0yLjAuMjAxMC4xMzg3LCBDdWx0dXJlPW5ldXRy
        YWwsIFB1YmxpY0tleVRva2VuPWI1Y2UxY2UzZmE0OWEyYzQFAQAAADlHdXJ1Q29tcG9uZW50cy5OZXRy
        aXguSHRtbEZvcm1hdHRpbmcuSHRtbEZvcm1hdHRlck9wdGlvbnMOAAAADl9lbGVtZW50Q2FzaW5nEF9h
        dHRyaWJ1dGVDYXNpbmcKX21ha2VYaHRtbAtfaW5kZW50Q2hhcgtfaW5kZW50U2l6ZQ5fbWF4TGluZUxl
        bmd0aAlfRW50aXRpZXMKX3dvcmRDbGVhbg1fY29tbWVudENEQVRBE19jb21tZW50Q0RBVEFTdHJpbmcY
        X2NvbW1lbnRDREFUQUFkZHNOZXdsaW5lE19wcmVzZXJ2ZVdoaXRlc3BhY2URX2Zha2VFbXB0eVBhcmFU
        YWcPX3JlZm9ybWF0U3R5bGVzBAQAAAAABAAAAQAAAAA2R3VydUNvbXBvbmVudHMuTmV0cml4Lkh0bWxG
        b3JtYXR0aW5nLkh0bWxGb3JtYXR0ZXJDYXNlAwAAADZHdXJ1Q29tcG9uZW50cy5OZXRyaXguSHRtbEZv
        cm1hdHRpbmcuSHRtbEZvcm1hdHRlckNhc2UDAAAAAQMICDFHdXJ1Q29tcG9uZW50cy5OZXRyaXguSHRt
        bEZvcm1hdHRpbmcuRW50aXR5Rm9ybWF0AwAAAAEBAQEBAQIAAAAF/P///zZHdXJ1Q29tcG9uZW50cy5O
        ZXRyaXguSHRtbEZvcm1hdHRpbmcuSHRtbEZvcm1hdHRlckNhc2UBAAAAB3ZhbHVlX18ACAMAAAACAAAA
        Afv////8////AgAAAAEgBAAAAAACAAAF+v///zFHdXJ1Q29tcG9uZW50cy5OZXRyaXguSHRtbEZvcm1h
        dHRpbmcuRW50aXR5Rm9ybWF0AQAAAAd2YWx1ZV9fAAgDAAAAAQAAAAABBgcAAAACLy8AAAAACw==
</value>
  </data>
</root>